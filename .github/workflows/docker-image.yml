name: Build Docker & Create GitHub Release with Fallback Notes

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-push-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set TAG
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/jmeter-analyzer:${{ env.TAG }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/jmeter-analyzer:${{ env.TAG }} ${{ secrets.DOCKERHUB_USERNAME }}/jmeter-analyzer:latest

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/jmeter-analyzer:${{ env.TAG }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/jmeter-analyzer:latest

      - name: Try to extract changelog section
        id: changelog
        shell: bash
        run: |
          TAG="${{ env.TAG }}"
      
          RELEASE_NOTES=$(awk -v tag="$TAG" '
            BEGIN {
              found = 0;
              tag_header = "^##[[:space:]]*(\\[)?" tag "(\\])?[[:space:]]*-?.*$";
              next_tag = "^##[[:space:]]*(\\[)?v[0-9]+\\.[0-9]+\\.[0-9]+(\\])?[[:space:]]*-?.*$";
            }
            $0 ~ tag_header { found = 1; next }
            found && $0 ~ next_tag { exit }
            found { print }
          ' CHANGELOG.md)
      
          if [[ -z "$RELEASE_NOTES" ]]; then
            echo "use_generated=true" >> $GITHUB_OUTPUT
          else
            echo "use_generated=false" >> $GITHUB_OUTPUT
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
            echo "$RELEASE_NOTES" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi


      - name: Create GitHub Release (manual or generated notes)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: Release ${{ env.TAG }}
          body: ${{ env.RELEASE_NOTES }}
          generate_release_notes: ${{ steps.changelog.outputs.use_generated }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
